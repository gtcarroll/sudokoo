{"ast":null,"code":"//import React from \"react\";\n// const NakedSingleComponent = (props) => {\n//   return <h2>naked single</h2>;\n// };\nexport const nakedSingle = {\n  name: \"Naked Single\",\n  check: (cell, state, showcase) => {\n    // if this cell has only one suspect...\n    if (cell.suspects.size === 1) {\n      // ...report that suspect's value.\n      // TODO: replace this...\n      // ...with this\n      // 1) create a copy of state.sudoku\n      // 2) update this cell in the copy cell w new value\n      let solution = cell.suspects.values().next().value;\n      state.sudoku.rows[cell.row][cell.col].val = solution;\n      showcase.rows[cell.row][cell.col].notes[solution] = 1;\n      state.unsolved.delete(key); // 3) return the new sudoku\n\n      return showcase;\n    }\n\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/Gabe/Documents/Projects/sudokoo/src/components/techniques/NakedSingle.js"],"names":["nakedSingle","name","check","cell","state","showcase","suspects","size","solution","values","next","value","sudoku","rows","row","col","val","notes","unsolved","delete","key"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA,OAAO,MAAMA,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,cADmB;AAEzBC,EAAAA,KAAK,EAAE,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AAChC;AACA,QAAIF,IAAI,CAACG,QAAL,CAAcC,IAAd,KAAuB,CAA3B,EAA8B;AAC5B;AAEA;AAEA;AACA;AACA;AACA,UAAIC,QAAQ,GAAGL,IAAI,CAACG,QAAL,CAAcG,MAAd,GAAuBC,IAAvB,GAA8BC,KAA7C;AACAP,MAAAA,KAAK,CAACQ,MAAN,CAAaC,IAAb,CAAkBV,IAAI,CAACW,GAAvB,EAA4BX,IAAI,CAACY,GAAjC,EAAsCC,GAAtC,GAA4CR,QAA5C;AACAH,MAAAA,QAAQ,CAACQ,IAAT,CAAcV,IAAI,CAACW,GAAnB,EAAwBX,IAAI,CAACY,GAA7B,EAAkCE,KAAlC,CAAwCT,QAAxC,IAAoD,CAApD;AAEAJ,MAAAA,KAAK,CAACc,QAAN,CAAeC,MAAf,CAAsBC,GAAtB,EAZ4B,CAa5B;;AACA,aAAOf,QAAP;AACD;;AACD,WAAO,KAAP;AACD;AArBwB,CAApB","sourcesContent":["//import React from \"react\";\n\n// const NakedSingleComponent = (props) => {\n//   return <h2>naked single</h2>;\n// };\n\nexport const nakedSingle = {\n  name: \"Naked Single\",\n  check: (cell, state, showcase) => {\n    // if this cell has only one suspect...\n    if (cell.suspects.size === 1) {\n      // ...report that suspect's value.\n\n      // TODO: replace this...\n\n      // ...with this\n      // 1) create a copy of state.sudoku\n      // 2) update this cell in the copy cell w new value\n      let solution = cell.suspects.values().next().value;\n      state.sudoku.rows[cell.row][cell.col].val = solution;\n      showcase.rows[cell.row][cell.col].notes[solution] = 1;\n\n      state.unsolved.delete(key);\n      // 3) return the new sudoku\n      return showcase;\n    }\n    return false;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}