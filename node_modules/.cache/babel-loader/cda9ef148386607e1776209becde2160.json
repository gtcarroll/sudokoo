{"ast":null,"code":"//import React from \"react\";\n// const NakedSingleComponent = (props) => {\n//   return <h2>naked single</h2>;\n// };\nexport const nakedSingle = {\n  name: \"Naked Single\",\n  test: [[0, 4, 9, 0, 0, 0, 0, 3, 0], [0, 5, 0, 6, 1, 0, 0, 0, 0], [0, 0, 8, 0, 2, 9, 5, 0, 6], [8, 0, 0, 9, 0, 7, 0, 0, 4], [7, 0, 0, 0, 0, 0, 0, 8, 1], [0, 2, 5, 0, 4, 1, 3, 0, 0], [2, 0, 0, 0, 7, 6, 0, 1, 0], [5, 0, 0, 4, 0, 8, 7, 0, 0], [0, 8, 7, 0, 0, 0, 0, 9, 5]],\n  check: (cell, state, showcase) => {\n    // count this cell's suspects\n    let suspects = 0;\n    let soln = -1;\n\n    for (let i = 0; i < cell.notes.length; i++) {\n      if (cell.notes[i] > 0) {\n        suspects++;\n        soln = i + 1;\n      }\n    } // if this cell has only one suspect...\n\n\n    if (suspects === 1) {\n      // ...update affected cell notes,\n      for (let aff of state.unsolved) {\n        if (aff.row === cell.row || aff.col === cell.col || aff.house === cell.house) {\n          if (aff.notes[soln - 1] > 0) {\n            // remove in state\n            aff.notes[soln - 1] = -1; // cross-out in showcase\n\n            showcase.houses[aff.house][aff.room].notes[soln - 1] = -1;\n          }\n        }\n      } // ...set cell value in state,\n\n\n      state.sudoku.houses[cell.house][cell.room].val = soln;\n      state.sudoku.houses[cell.house][cell.room].notes[soln - 1] = 1; // ...highlight note value in showcase,\n\n      showcase.houses[cell.house][cell.room].notes[soln - 1] = 2; // ...remove from unsolved.\n\n      state.unsolved.splice(state.unsolved.indexOf(cell), 1);\n      return showcase;\n    }\n\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/Gabe/Documents/Projects/sudokoo/src/components/techniques/NakedSingle.js"],"names":["nakedSingle","name","test","check","cell","state","showcase","suspects","soln","i","notes","length","aff","unsolved","row","col","house","houses","room","sudoku","val","splice","indexOf"],"mappings":"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","sourcesContent":["//import React from \"react\";\n\n// const NakedSingleComponent = (props) => {\n//   return <h2>naked single</h2>;\n// };\n\nexport const nakedSingle = {\n  name: \"Naked Single\",\n  test: [\n    [0, 4, 9, 0, 0, 0, 0, 3, 0],\n    [0, 5, 0, 6, 1, 0, 0, 0, 0],\n    [0, 0, 8, 0, 2, 9, 5, 0, 6],\n    [8, 0, 0, 9, 0, 7, 0, 0, 4],\n    [7, 0, 0, 0, 0, 0, 0, 8, 1],\n    [0, 2, 5, 0, 4, 1, 3, 0, 0],\n    [2, 0, 0, 0, 7, 6, 0, 1, 0],\n    [5, 0, 0, 4, 0, 8, 7, 0, 0],\n    [0, 8, 7, 0, 0, 0, 0, 9, 5],\n  ],\n  check: (cell, state, showcase) => {\n    // count this cell's suspects\n    let suspects = 0;\n    let soln = -1;\n    for (let i = 0; i < cell.notes.length; i++) {\n      if (cell.notes[i] > 0) {\n        suspects++;\n        soln = i + 1;\n      }\n    }\n\n    // if this cell has only one suspect...\n    if (suspects === 1) {\n      // ...update affected cell notes,\n      for (let aff of state.unsolved) {\n        if (\n          aff.row === cell.row ||\n          aff.col === cell.col ||\n          aff.house === cell.house\n        ) {\n          if (aff.notes[soln - 1] > 0) {\n            // remove in state\n            aff.notes[soln - 1] = -1;\n            // cross-out in showcase\n            showcase.houses[aff.house][aff.room].notes[soln - 1] = -1;\n          }\n        }\n      }\n\n      // ...set cell value in state,\n      state.sudoku.houses[cell.house][cell.room].val = soln;\n      state.sudoku.houses[cell.house][cell.room].notes[soln - 1] = 1;\n      // ...highlight note value in showcase,\n      showcase.houses[cell.house][cell.room].notes[soln - 1] = 2;\n\n      // ...remove from unsolved.\n      state.unsolved.splice(state.unsolved.indexOf(cell), 1);\n      return showcase;\n    }\n    return false;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}