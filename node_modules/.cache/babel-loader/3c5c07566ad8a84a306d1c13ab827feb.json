{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { forwardRef, useImperativeHandle } from \"react\";\nimport { Technique } from \"./Technique.js\";\nexport const NakedSingle = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const name = \"class Naked Single\";\n  useImperativeHandle(ref, () => ({\n    check(cell) {\n      if (cell.suspects.size === 1) {\n        return cell.suspects.values().next().value;\n      }\n\n      return 0;\n    }\n\n  })); // IDEA: export named fxns instead of creating individual classes?\n\n  const check = cell => {\n    if (cell.suspects.size === 1) {\n      return cell.suspects.values().next().value;\n    }\n\n    return 0;\n  };\n}, \"PYzlZ2AGFM0KxtNOGoZVRb5EOEw=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = NakedSingle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NakedSingle$forwardRef\");\n$RefreshReg$(_c2, \"NakedSingle\");","map":{"version":3,"sources":["/Users/Gabe/Documents/Projects/sudokoo/src/components/NakedSingle.js"],"names":["React","forwardRef","useImperativeHandle","Technique","NakedSingle","props","ref","name","check","cell","suspects","size","values","next","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,mBAA5B,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAO,MAAMC,WAAW,gBAAGH,UAAU,SAAC,CAACI,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACpD,QAAMC,IAAI,GAAG,oBAAb;AAEAL,EAAAA,mBAAmB,CAACI,GAAD,EAAM,OAAO;AAC9BE,IAAAA,KAAK,CAACC,IAAD,EAAO;AACV,UAAIA,IAAI,CAACC,QAAL,CAAcC,IAAd,KAAuB,CAA3B,EAA8B;AAC5B,eAAOF,IAAI,CAACC,QAAL,CAAcE,MAAd,GAAuBC,IAAvB,GAA8BC,KAArC;AACD;;AACD,aAAO,CAAP;AACD;;AAN6B,GAAP,CAAN,CAAnB,CAHoD,CAYpD;;AACA,QAAMN,KAAK,GAAIC,IAAD,IAAU;AACtB,QAAIA,IAAI,CAACC,QAAL,CAAcC,IAAd,KAAuB,CAA3B,EAA8B;AAC5B,aAAOF,IAAI,CAACC,QAAL,CAAcE,MAAd,GAAuBC,IAAvB,GAA8BC,KAArC;AACD;;AACD,WAAO,CAAP;AACD,GALD;AAMD,CAnBoC;AAAA,UAGnCZ,mBAHmC;AAAA,GAA9B;MAAME,W","sourcesContent":["import React, { forwardRef, useImperativeHandle } from \"react\";\nimport { Technique } from \"./Technique.js\";\n\nexport const NakedSingle = forwardRef((props, ref) => {\n  const name = \"class Naked Single\";\n\n  useImperativeHandle(ref, () => ({\n    check(cell) {\n      if (cell.suspects.size === 1) {\n        return cell.suspects.values().next().value;\n      }\n      return 0;\n    },\n  }));\n\n  // IDEA: export named fxns instead of creating individual classes?\n  const check = (cell) => {\n    if (cell.suspects.size === 1) {\n      return cell.suspects.values().next().value;\n    }\n    return 0;\n  };\n});\n"]},"metadata":{},"sourceType":"module"}