{"ast":null,"code":"import React, { forwardRef } from \"react\";\nimport { Technique } from \"./Technique.js\";\nexport const NakedSingle = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  const name = \"class Naked Single\"; // IDEA: export named fxns instead of creating individual classes?\n\n  const check = cell => {\n    if (cell.suspects.size === 1) {\n      return cell.suspects.values().next().value;\n    }\n\n    return 0;\n  };\n});\n_c2 = NakedSingle;\nexport const check = cell => {\n  if (cell.suspects.size === 1) {\n    return cell.suspects.values().next().value;\n  }\n\n  return 0;\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NakedSingle$forwardRef\");\n$RefreshReg$(_c2, \"NakedSingle\");","map":{"version":3,"sources":["/Users/Gabe/Documents/Projects/sudokoo/src/components/NakedSingle.js"],"names":["React","forwardRef","Technique","NakedSingle","props","ref","name","check","cell","suspects","size","values","next","value"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAO,MAAMC,WAAW,gBAAGF,UAAU,MAAC,CAACG,KAAD,EAAQC,GAAR,KAAgB;AACpD,QAAMC,IAAI,GAAG,oBAAb,CADoD,CAGpD;;AACA,QAAMC,KAAK,GAAIC,IAAD,IAAU;AACtB,QAAIA,IAAI,CAACC,QAAL,CAAcC,IAAd,KAAuB,CAA3B,EAA8B;AAC5B,aAAOF,IAAI,CAACC,QAAL,CAAcE,MAAd,GAAuBC,IAAvB,GAA8BC,KAArC;AACD;;AACD,WAAO,CAAP;AACD,GALD;AAMD,CAVoC,CAA9B;MAAMV,W;AAYb,OAAO,MAAMI,KAAK,GAAIC,IAAD,IAAU;AAC7B,MAAIA,IAAI,CAACC,QAAL,CAAcC,IAAd,KAAuB,CAA3B,EAA8B;AAC5B,WAAOF,IAAI,CAACC,QAAL,CAAcE,MAAd,GAAuBC,IAAvB,GAA8BC,KAArC;AACD;;AACD,SAAO,CAAP;AACD,CALM","sourcesContent":["import React, { forwardRef } from \"react\";\nimport { Technique } from \"./Technique.js\";\n\nexport const NakedSingle = forwardRef((props, ref) => {\n  const name = \"class Naked Single\";\n\n  // IDEA: export named fxns instead of creating individual classes?\n  const check = (cell) => {\n    if (cell.suspects.size === 1) {\n      return cell.suspects.values().next().value;\n    }\n    return 0;\n  };\n});\n\nexport const check = (cell) => {\n  if (cell.suspects.size === 1) {\n    return cell.suspects.values().next().value;\n  }\n  return 0;\n};\n"]},"metadata":{},"sourceType":"module"}