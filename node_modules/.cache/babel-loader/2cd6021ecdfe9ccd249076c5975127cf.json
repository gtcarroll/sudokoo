{"ast":null,"code":"//import React from \"react\";\n// const HiddenSingleComponent = (props) => {\n//   return <h2>naked single</h2>;\n// };\nexport const hiddenSingle = {\n  name: \"Hidden Single\",\n  check: (cell, state) => {\n    let axes = [state.sudoku.rows, state.sudoku.cols, state.sudoku.houses];\n    let indexes = [cell.row, cell.col, cell.house];\n\n    for (let a = 0; a < 3; a++) {\n      let axis = axes[a][indexes[a]];\n      let unseen = Array.from(cell.suspects);\n\n      for (let i = 0; i < 9; i++) {\n        let other = axis[i];\n\n        if (other.val === 0) {\n          console.log(other);\n          other.suspects.forEach(suspect => {\n            unseen = unseen.filter(e => e !== suspect);\n          });\n          console.log(other.val);\n        }\n      }\n\n      if (unseen.length > 0) {\n        return unseen[0];\n      }\n    }\n\n    return 0;\n  }\n};","map":{"version":3,"sources":["/Users/Gabe/Documents/Projects/sudokoo/src/components/techniques/HiddenSingle.js"],"names":["hiddenSingle","name","check","cell","state","axes","sudoku","rows","cols","houses","indexes","row","col","house","a","axis","unseen","Array","from","suspects","i","other","val","console","log","forEach","suspect","filter","e","length"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,eADoB;AAE1BC,EAAAA,KAAK,EAAE,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtB,QAAIC,IAAI,GAAG,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,EAAoBH,KAAK,CAACE,MAAN,CAAaE,IAAjC,EAAuCJ,KAAK,CAACE,MAAN,CAAaG,MAApD,CAAX;AACA,QAAIC,OAAO,GAAG,CAACP,IAAI,CAACQ,GAAN,EAAWR,IAAI,CAACS,GAAhB,EAAqBT,IAAI,CAACU,KAA1B,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,UAAIC,IAAI,GAAGV,IAAI,CAACS,CAAD,CAAJ,CAAQJ,OAAO,CAACI,CAAD,CAAf,CAAX;AACA,UAAIE,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWf,IAAI,CAACgB,QAAhB,CAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAIC,KAAK,GAAGN,IAAI,CAACK,CAAD,CAAhB;;AACA,YAAIC,KAAK,CAACC,GAAN,KAAc,CAAlB,EAAqB;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAA,UAAAA,KAAK,CAACF,QAAN,CAAeM,OAAf,CAAwBC,OAAD,IAAa;AAClCV,YAAAA,MAAM,GAAGA,MAAM,CAACW,MAAP,CAAeC,CAAD,IAAOA,CAAC,KAAKF,OAA3B,CAAT;AACD,WAFD;AAGAH,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,GAAlB;AACD;AACF;;AACD,UAAIN,MAAM,CAACa,MAAP,GAAgB,CAApB,EAAuB;AACrB,eAAOb,MAAM,CAAC,CAAD,CAAb;AACD;AACF;;AACD,WAAO,CAAP;AACD;AAvByB,CAArB","sourcesContent":["//import React from \"react\";\n\n// const HiddenSingleComponent = (props) => {\n//   return <h2>naked single</h2>;\n// };\n\nexport const hiddenSingle = {\n  name: \"Hidden Single\",\n  check: (cell, state) => {\n    let axes = [state.sudoku.rows, state.sudoku.cols, state.sudoku.houses];\n    let indexes = [cell.row, cell.col, cell.house];\n    for (let a = 0; a < 3; a++) {\n      let axis = axes[a][indexes[a]];\n      let unseen = Array.from(cell.suspects);\n      for (let i = 0; i < 9; i++) {\n        let other = axis[i];\n        if (other.val === 0) {\n          console.log(other);\n          other.suspects.forEach((suspect) => {\n            unseen = unseen.filter((e) => e !== suspect);\n          });\n          console.log(other.val);\n        }\n      }\n      if (unseen.length > 0) {\n        return unseen[0];\n      }\n    }\n    return 0;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}