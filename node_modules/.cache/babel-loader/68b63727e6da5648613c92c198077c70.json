{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Gabe/Documents/Projects/sudokoo/src/components/HiddenSingle.js\";\nimport React from \"react\";\n\nconst HiddenSingleComponent = props => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"naked single\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = HiddenSingleComponent;\nexport const hiddenSingle = {\n  name: \"Hidden Single\",\n  check: (cell, state) => {\n    // Hidden Single check\n    // ...\n    // TODO: create function that runs passed fxn on row, col, house to reduce code duplication\n    // TODO: fix this total fustercluck\n    //for (let i = 0; i < state.unsolved.length && i < 81; i++) {\n    let target = cell;\n    let unseen = Array.from(target.suspects);\n    state.unsolved.forEach(cell => {\n      if (cell.row === target.row && !isSameCell(target, cell)) {\n        cell.suspects.forEach(val => {\n          //console.log(\"DEBUG\" + val);\n          unseen = unseen.filter(e => e !== val);\n        });\n      }\n    });\n\n    if (unseen.length > 0) {\n      target = state.unsolved.splice(i, 1)[0];\n      return reportSolution(\"Hidden Single\", target, unseen[0]);\n    }\n\n    unseen = Array.from(target.suspects); //console.log(unseen);\n\n    state.unsolved.forEach(cell => {\n      if (cell.col === target.col && !isSameCell(target, cell)) {\n        cell.suspects.forEach(val => {\n          //console.log(\"DEBUG\" + val);\n          unseen = unseen.filter(e => e !== val);\n        });\n      }\n    });\n\n    if (unseen.length > 0) {\n      target = state.unsolved.splice(i, 1)[0];\n      return reportSolution(\"Hidden Single\", target, unseen[0]);\n    }\n\n    unseen = Array.from(target.suspects); //console.log(unseen);\n\n    state.unsolved.forEach(cell => {\n      if (cell.house === target.house && !isSameCell(target, cell)) {\n        cell.suspects.forEach(val => {\n          //console.log(\"DEBUG\" + val);\n          unseen = unseen.filter(e => e !== val);\n        });\n      }\n    });\n\n    if (unseen.length > 0) {\n      target = state.unsolved.splice(i, 1)[0];\n      return reportSolution(\"Hidden Single\", target, unseen[0]);\n    } //}\n\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HiddenSingleComponent\");","map":{"version":3,"sources":["/Users/Gabe/Documents/Projects/sudokoo/src/components/HiddenSingle.js"],"names":["React","HiddenSingleComponent","props","hiddenSingle","name","check","cell","state","target","unseen","Array","from","suspects","unsolved","forEach","row","isSameCell","val","filter","e","length","splice","i","reportSolution","col","house"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst HiddenSingleComponent = (props) => {\n  return <h2>naked single</h2>;\n};\n\nexport const hiddenSingle = {\n  name: \"Hidden Single\",\n  check: (cell, state) => {\n    // Hidden Single check\n    // ...\n    // TODO: create function that runs passed fxn on row, col, house to reduce code duplication\n    // TODO: fix this total fustercluck\n    //for (let i = 0; i < state.unsolved.length && i < 81; i++) {\n    let target = cell;\n    let unseen = Array.from(target.suspects);\n    state.unsolved.forEach((cell) => {\n      if (cell.row === target.row && !isSameCell(target, cell)) {\n        cell.suspects.forEach((val) => {\n          //console.log(\"DEBUG\" + val);\n          unseen = unseen.filter((e) => e !== val);\n        });\n      }\n    });\n    if (unseen.length > 0) {\n      target = state.unsolved.splice(i, 1)[0];\n      return reportSolution(\"Hidden Single\", target, unseen[0]);\n    }\n\n    unseen = Array.from(target.suspects);\n    //console.log(unseen);\n    state.unsolved.forEach((cell) => {\n      if (cell.col === target.col && !isSameCell(target, cell)) {\n        cell.suspects.forEach((val) => {\n          //console.log(\"DEBUG\" + val);\n          unseen = unseen.filter((e) => e !== val);\n        });\n      }\n    });\n    if (unseen.length > 0) {\n      target = state.unsolved.splice(i, 1)[0];\n      return reportSolution(\"Hidden Single\", target, unseen[0]);\n    }\n\n    unseen = Array.from(target.suspects);\n    //console.log(unseen);\n    state.unsolved.forEach((cell) => {\n      if (cell.house === target.house && !isSameCell(target, cell)) {\n        cell.suspects.forEach((val) => {\n          //console.log(\"DEBUG\" + val);\n          unseen = unseen.filter((e) => e !== val);\n        });\n      }\n    });\n    if (unseen.length > 0) {\n      target = state.unsolved.splice(i, 1)[0];\n      return reportSolution(\"Hidden Single\", target, unseen[0]);\n    }\n    //}\n  },\n};\n"]},"metadata":{},"sourceType":"module"}