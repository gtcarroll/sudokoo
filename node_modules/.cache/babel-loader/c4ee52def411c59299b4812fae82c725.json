{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Gabe/Documents/Projects/sudokoo/src/components/HiddenSingle.js\";\nimport React from \"react\";\n\nconst HiddenSingleComponent = props => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"naked single\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = HiddenSingleComponent;\nexport const hiddenSingle = {\n  name: \"Hidden Single\",\n  check: (cell, state) => {\n    // Hidden Single check\n    // ...\n    // TODO: create function that runs passed fxn on row, col, house to reduce code duplication\n    // TODO: fix this total fustercluck\n    for (let i = 0; i < state.unsolved.length && i < 81; i++) {\n      let target = state.unsolved[i];\n      let unseen = Array.from(target.suspects);\n      state.unsolved.forEach(cell => {\n        if (cell.row === target.row && !isSameCell(target, cell)) {\n          cell.suspects.forEach(val => {\n            //console.log(\"DEBUG\" + val);\n            unseen = unseen.filter(e => e !== val);\n          });\n        }\n      });\n\n      if (unseen.length > 0) {\n        target = state.unsolved.splice(i, 1)[0];\n        return reportSolution(\"Hidden Single\", target, unseen[0]);\n      }\n\n      unseen = Array.from(target.suspects); //console.log(unseen);\n\n      state.unsolved.forEach(cell => {\n        if (cell.col === target.col && !isSameCell(target, cell)) {\n          cell.suspects.forEach(val => {\n            //console.log(\"DEBUG\" + val);\n            unseen = unseen.filter(e => e !== val);\n          });\n        }\n      });\n\n      if (unseen.length > 0) {\n        target = state.unsolved.splice(i, 1)[0];\n        return reportSolution(\"Hidden Single\", target, unseen[0]);\n      }\n\n      unseen = Array.from(target.suspects); //console.log(unseen);\n\n      state.unsolved.forEach(cell => {\n        if (cell.house === target.house && !isSameCell(target, cell)) {\n          cell.suspects.forEach(val => {\n            //console.log(\"DEBUG\" + val);\n            unseen = unseen.filter(e => e !== val);\n          });\n        }\n      });\n\n      if (unseen.length > 0) {\n        target = state.unsolved.splice(i, 1)[0];\n        return reportSolution(\"Hidden Single\", target, unseen[0]);\n      }\n    }\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HiddenSingleComponent\");","map":{"version":3,"sources":["/Users/Gabe/Documents/Projects/sudokoo/src/components/HiddenSingle.js"],"names":["React","HiddenSingleComponent","props","hiddenSingle","name","check","cell","state","i","unsolved","length","target","unseen","Array","from","suspects","forEach","row","isSameCell","val","filter","e","splice","reportSolution","col","house"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst HiddenSingleComponent = (props) => {\n  return <h2>naked single</h2>;\n};\n\nexport const hiddenSingle = {\n  name: \"Hidden Single\",\n  check: (cell, state) => {\n    // Hidden Single check\n    // ...\n    // TODO: create function that runs passed fxn on row, col, house to reduce code duplication\n    // TODO: fix this total fustercluck\n    for (let i = 0; i < state.unsolved.length && i < 81; i++) {\n      let target = state.unsolved[i];\n      let unseen = Array.from(target.suspects);\n      state.unsolved.forEach((cell) => {\n        if (cell.row === target.row && !isSameCell(target, cell)) {\n          cell.suspects.forEach((val) => {\n            //console.log(\"DEBUG\" + val);\n            unseen = unseen.filter((e) => e !== val);\n          });\n        }\n      });\n      if (unseen.length > 0) {\n        target = state.unsolved.splice(i, 1)[0];\n        return reportSolution(\"Hidden Single\", target, unseen[0]);\n      }\n\n      unseen = Array.from(target.suspects);\n      //console.log(unseen);\n      state.unsolved.forEach((cell) => {\n        if (cell.col === target.col && !isSameCell(target, cell)) {\n          cell.suspects.forEach((val) => {\n            //console.log(\"DEBUG\" + val);\n            unseen = unseen.filter((e) => e !== val);\n          });\n        }\n      });\n      if (unseen.length > 0) {\n        target = state.unsolved.splice(i, 1)[0];\n        return reportSolution(\"Hidden Single\", target, unseen[0]);\n      }\n\n      unseen = Array.from(target.suspects);\n      //console.log(unseen);\n      state.unsolved.forEach((cell) => {\n        if (cell.house === target.house && !isSameCell(target, cell)) {\n          cell.suspects.forEach((val) => {\n            //console.log(\"DEBUG\" + val);\n            unseen = unseen.filter((e) => e !== val);\n          });\n        }\n      });\n      if (unseen.length > 0) {\n        target = state.unsolved.splice(i, 1)[0];\n        return reportSolution(\"Hidden Single\", target, unseen[0]);\n      }\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}